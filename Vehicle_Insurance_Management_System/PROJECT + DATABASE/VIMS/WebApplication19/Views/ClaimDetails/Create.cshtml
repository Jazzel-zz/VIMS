@model VIMS.Models.ClaimDetail

@{
    ViewBag.Title = "Create";
}

<div class="card shadow-lg">
    <div class="card-body">
        <h2 style="font-family:Pacifico">Claim Form</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.SameVehiclePolicyError != "")
                {
                    <p class="text-center text-danger h4">@ViewBag.SameVehiclePolicyError</p>
                }
                <div class="form-group" style="display:none;">
                    @Html.LabelFor(model => model.ClaimNumber, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.ClaimNumber, new { htmlAttributes = new { @class = "form-control", @Value = "dsad" } })
                        @Html.ValidationMessageFor(model => model.ClaimNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.DropDownList("ApplicationUserId", null, htmlAttributes: new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerPolicyRecordId, "CustomerPolicyRecordId", htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.DropDownList("CustomerPolicyRecordId", null, htmlAttributes: new { @class = "form-control", @id = "policySelect" })
                        @Html.ValidationMessageFor(model => model.CustomerPolicyRecordId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-12" id="updatePanel">

                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.PlaceOfAccident, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.PlaceOfAccident, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PlaceOfAccident, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfAccident, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.DateOfAccident, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfAccident, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InsuredAmount, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.InsuredAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InsuredAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClaimableAmount, htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.ClaimableAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClaimableAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-12">
                        <input type="submit" value="Create" class="btn btn-lg btn-dark w-100" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            var getValue = $("#policySelect").val();
            $("#policySelect").on('change', function () {
                var getValue = $(this).val();
                console.log(getValue);
                getData(getValue);
            });
            console.log(getValue);
            console.log("Fetching.......");
            getData(getValue);
        });
        function getData(P_id) {
            $.ajax({
                url: '/ClaimDetails/GetPolicyDetail/',
                type: "GET",
                dataType: "json",
                data: { id: P_id },
                success: function (data) {
                    console.log(data);
                    var Number = data.Number;
                    var Vehicle = data.Vehicle;
                    var Type = data.Type;
                    var Description = data.Description;
                    var updateData = "<div class='card animated fadeIn text-center'><div class='card-body'><div class='row'><div class='col'><h1 style='font-family:Pacifico' class='text-center'>Policy Details</h1></div></div><br /><div class='row'><div class='col'><p>Policy Number: " + Number + "</p></div><div class='col'><p>Vehicle: " + Vehicle + "</p></div><div class='col'><p>Policy Type: " + Type + "</p></div></div><div class='row'><div class='col'>Description: " + Description + "</div></div></div></div>";
                    $("#updatePanel").html(updateData);
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                    alert(status);
                    alert(error);
                },
            });
        }


    </script>
}
